{"version":3,"sources":["webpack:///./src/app/core/models/abstract.model.ts","webpack:///./src/app/core/models/car-data.model.ts","webpack:///./src/app/core/models/car.model.ts","webpack:///./src/app/table/components/table/table.component.html","webpack:///./src/app/table/components/table/table.component.scss","webpack:///./src/app/table/components/table/table.component.ts","webpack:///./src/app/table/services/table/table.service.ts","webpack:///./src/app/table/table-routing.module.ts","webpack:///./src/app/table/table.module.ts"],"names":[],"mappings":"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","file":"table-table-module.js","sourcesContent":["export class AbstractModel {\n\n  customFieldName: string;\n  customFieldValue: string;\n\n  constructor() {\n    this.customFieldName = null;\n    this.customFieldValue = null;\n  }\n}\n","export class CarData {\n\n  id: number;\n  name: string;\n  price: number;\n\n  constructor() {\n    this.id = null;\n    this.name = null;\n    this.price = null;\n  }\n}\n","import { CarData } from './car-data.model';\nimport { AbstractModel } from './abstract.model';\n\nexport class Car {\n\n    carData: CarData;\n    customField?: AbstractModel;\n\n    constructor(carData: CarData, abstractData: AbstractModel) {\n        this.carData = carData;\n        this.customField = abstractData;\n    }\n}\n","module.exports = \"<div class=\\\"w3-top\\\">\\n  <div class=\\\"w3-bar\\\">\\n    <button\\n      (click)=\\\"isSortFormOpen = !isSortFormOpen\\\"\\n      class=\\\"w3-button w3-pale-yellow w3-large\\\"\\n    >\\n      <span *ngIf=\\\"!isSortFormOpen; else sortFormOpened\\\">Open sorting</span>\\n      <ng-template #sortFormOpened>Close sorting</ng-template>\\n    </button>\\n\\n    <button\\n      (click)=\\\"isCarAddOpen = !isCarAddOpen; isCarEditOpen = false\\\"\\n      class=\\\"w3-button w3-pale-yellow w3-large\\\"\\n    >\\n      <span *ngIf=\\\"!isCarAddOpen; else carAddOpened\\\">Open car add form</span>\\n      <ng-template #carAddOpened>Close car add form</ng-template>\\n    </button>\\n  </div>\\n</div>\\n\\n<!-- SORT FORM -->\\n\\n<form\\n  [formGroup]=\\\"sortForm\\\"\\n  (ngSubmit)=\\\"sortDataByColumn()\\\"\\n  *ngIf=\\\"isSortFormOpen\\\"\\n>\\n  <div class=\\\"w3-container w3-black\\\">\\n    <h1>Sort table columns</h1>\\n  </div>\\n\\n  <div class=\\\"w3-row\\\">\\n    <div class=\\\"w3-third\\\">\\n      <form [formGroup]=\\\"sortForm\\\">\\n        <div class=\\\"w3-container w3-black\\\">\\n          <h1>Column</h1>\\n        </div>\\n        <span *ngFor=\\\"let header of headers\\\">\\n          <p>\\n            <input\\n              class=\\\"w3-radio\\\"\\n              [value]=\\\"header\\\"\\n              formControlName=\\\"sortBy\\\"\\n              type=\\\"radio\\\"\\n            /><label>{{ header }}</label>\\n          </p>\\n        </span>\\n      </form>\\n    </div>\\n    <div class=\\\"w3-third\\\">\\n      <div class=\\\"w3-container w3-black\\\">\\n        <h1>Sort order</h1>\\n      </div>\\n      <form [formGroup]=\\\"sortForm\\\" class=\\\"w3-select\\\">\\n        <p>\\n          <input\\n            class=\\\"w3-radio\\\"\\n            value=\\\"ascending\\\"\\n            formControlName=\\\"sortType\\\"\\n            type=\\\"radio\\\"\\n          /><label>ascending</label>\\n        </p>\\n        <p>\\n          <input\\n            class=\\\"w3-radio\\\"\\n            value=\\\"descending\\\"\\n            formControlName=\\\"sortType\\\"\\n            type=\\\"radio\\\"\\n          /><label>descending</label>\\n        </p>\\n      </form>\\n    </div>\\n    <div class=\\\"w3-third\\\">\\n      <button type=\\\"submit\\\" class=\\\"w3-button w3-khaki\\\">\\n        Sort By selected column\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\\n<!-- MAIN TABLE -->\\n\\n<table *ngIf=\\\"cars\\\" class=\\\"w3-table w3-bordered w3-black\\\">\\n  <tr class=\\\"w3-pale-yellow\\\">\\n    <th></th>\\n    <th *ngFor=\\\"let header of headers; last as isLast\\\">\\n      <span\\n        *ngIf=\\\"\\n          headers.length === requiredFieldsCount;\\n          else tableHaveCustomColumn\\n        \\\"\\n      >\\n        {{ header }}\\n      </span>\\n      <ng-template #tableHaveCustomColumn>\\n        <span *ngIf=\\\"isLast; else notLastElement\\\">\\n          <button class=\\\"w3-button w3-khaki\\\" (click)=\\\"isDeleteFormOpen = true\\\">\\n            {{ header }}\\n          </button>\\n        </span>\\n        <ng-template #notLastElement>\\n          {{ header }}\\n        </ng-template>\\n      </ng-template>\\n    </th>\\n  </tr>\\n  <tr *ngFor=\\\"let car of cars.cars\\\">\\n    <th>\\n      <button (click)=\\\"deleteCar(car)\\\" class=\\\"w3-button w3-khaki\\\">\\n        Delete\\n      </button>\\n      <button (click)=\\\"editCar(car)\\\" class=\\\"w3-button w3-pale-yellow\\\">\\n        Edit\\n      </button>\\n    </th>\\n    <th *ngFor=\\\"let item of car.carData | keyvalue\\\">{{ item.value }}</th>\\n    <th *ngIf=\\\"car.customField\\\">\\n      {{ car.customField.customFieldValue }}\\n    </th>\\n  </tr>\\n</table>\\n\\n<div class=\\\"w3-modal\\\" *ngIf=\\\"isCarAddOpen\\\">\\n  <div class=\\\"w3-modal-content\\\">\\n    <div class=\\\"w3-container w3-black\\\">\\n      <h1>Add new car</h1>\\n    </div>\\n    <div class=\\\"w3-container\\\">\\n      <form [formGroup]=\\\"carAddForm\\\" (ngSubmit)=\\\"addCar()\\\" *ngIf=\\\"isCarAddOpen\\\">\\n        <input\\n          formControlName=\\\"id\\\"\\n          placeholder=\\\"id\\\"\\n          type=\\\"number\\\"\\n          min=\\\"1\\\"\\n          max=\\\"9999999\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <input formControlName=\\\"name\\\" placeholder=\\\"name\\\" />\\n        <input\\n          formControlName=\\\"price\\\"\\n          placeholder=\\\"price\\\"\\n          type=\\\"number\\\"\\n          min=\\\"100\\\"\\n          max=\\\"9999999\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <input\\n          formControlName=\\\"customFieldName\\\"\\n          placeholder=\\\"custom column name\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <input\\n          formControlName=\\\"customFieldValue\\\"\\n          placeholder=\\\"custom column value\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <button type=\\\"submit\\\" class=\\\"w3-button w3-khaki\\\">Add</button>\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"w3-button w3-pale-yellow w3-right\\\"\\n          (click)=\\\"isCarAddOpen = false\\\"\\n        >\\n          Close\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"w3-modal\\\" *ngIf=\\\"isCarEditOpen\\\">\\n  <div class=\\\"w3-modal-content\\\">\\n    <div class=\\\"w3-container w3-black\\\">\\n      <h2>Edit existing car</h2>\\n    </div>\\n    <div class=\\\"w3-container\\\">\\n      <form [formGroup]=\\\"carEditForm\\\" (ngSubmit)=\\\"submitEditedCar()\\\">\\n        <label><b>Car ID</b></label>\\n        <input\\n          formControlName=\\\"id\\\"\\n          placeholder=\\\"id\\\"\\n          type=\\\"number\\\"\\n          min=\\\"1\\\"\\n          max=\\\"9999999\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <label><b>Car model name</b></label>\\n        <input formControlName=\\\"name\\\" placeholder=\\\"name\\\" class=\\\"w3-input\\\" />\\n        <label><b>Car price</b></label>\\n        <input\\n          formControlName=\\\"price\\\"\\n          placeholder=\\\"price\\\"\\n          type=\\\"number\\\"\\n          min=\\\"100\\\"\\n          max=\\\"9999999\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <label><b>Additional column name</b></label>\\n        <input\\n          formControlName=\\\"customFieldName\\\"\\n          placeholder=\\\"custom column name\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <label><b>Car additional column value</b></label>\\n        <input\\n          formControlName=\\\"customFieldValue\\\"\\n          placeholder=\\\"custom column value\\\"\\n          class=\\\"w3-input\\\"\\n        />\\n        <button type=\\\"submit\\\" class=\\\"w3-button w3-khaki\\\">Edit</button>\\n        <button\\n          type=\\\"submit\\\"\\n          class=\\\"w3-button w3-pale-yellow w3-right\\\"\\n          (click)=\\\"isCarEditOpen = false\\\"\\n        >\\n          Close\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"w3-modal\\\" *ngIf=\\\"isDeleteFormOpen\\\">\\n  <div class=\\\"w3-modal-content\\\">\\n    <div class=\\\"w3-container w3-black\\\">\\n      <h2>Delete whole table column</h2>\\n    </div>\\n    <div class=\\\"w3-container\\\">\\n      <p>\\n        If you proceed - whole column will be deleted\\n      </p>\\n      <button class=\\\"w3-button w3-khaki\\\" (click)=\\\"deleteColumn()\\\">\\n        Proceed\\n      </button>\\n      <button\\n        class=\\\"w3-button w3-pale-yellow w3-right\\\"\\n        (click)=\\\"isDeleteFormOpen = false\\\"\\n      >\\n        Cancel\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlL2NvbXBvbmVudHMvdGFibGUvdGFibGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TableService } from '../../services/table/table.service';\nimport { Cars } from 'src/app/core/models/cars.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Car } from 'src/app/core/models/car.model';\nimport { CarData } from 'src/app/core/models/car-data.model';\nimport { AbstractModel } from 'src/app/core/models/abstract.model';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n\n  carData: CarData = new CarData();\n  customField: AbstractModel = new AbstractModel();\n  car: Car = new Car(this.carData, this.customField);\n  cars: Cars;\n\n  headers = [];\n  requiredFieldsCount: number;\n\n  carAddForm: FormGroup;\n  carEditForm: FormGroup;\n  sortForm: FormGroup;\n\n  isDeleteFormOpen = false;\n  isSortFormOpen = false;\n  isCarAddOpen = false;\n  isCarEditOpen = false;\n  currentEditing: Car = null;\n  currentEditingCarIndex: number;\n\n  constructor(\n    private tableService: TableService,\n    private formBuilder: FormBuilder\n  ) {\n    this.headers = Object.keys(this.carData);\n    this.getCarsData();\n    this.carAddForm = this.createFormGroup();\n    this.carEditForm = this.createFormGroup();\n    this.sortForm = this.formBuilder.group({\n      sortBy: [null],\n      sortType: [null]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  private getCarsData() {\n    this.tableService.getTableData()\n      .subscribe((carsArray: Cars) => {\n        this.cars = carsArray;\n        this.requiredFieldsCount = this.headers.length;\n      });\n  }\n\n  private createFormGroup() {\n    return this.formBuilder.group(\n      {\n        price: [this.car.carData.price, Validators.required],\n        name: [this.car.carData.name, Validators.required],\n        id: [this.car.carData.id],\n        customFieldName: [this.car.customField.customFieldName],\n        customFieldValue: [this.car.customField.customFieldValue]\n      }\n    );\n  }\n\n  addCar() {\n    if (this.carAddForm.valid) {\n      const form = this.carAddForm.value;\n      this.car.carData.id = form.id;\n      this.car.carData.name = form.name;\n      this.car.carData.price = form.price;\n      if (form.customFieldName) {\n        this.car.customField.customFieldName = form.customFieldName;\n        this.car.customField.customFieldValue = form.customFieldValue;\n      }\n      this.cars.cars.push(this.car);\n      console.log(this.car);\n      console.log(this.cars);\n      this.carAddForm.reset();\n    }\n  }\n\n  deleteCar(car: Car) {\n    const index = this.cars.cars.indexOf(car);\n    if (index !== -1) {\n      this.cars.cars.splice(index, 1);\n    }\n  }\n\n  editCar(car: Car) {\n    this.isCarAddOpen = false;\n\n    const currenCarIndex = this.cars.cars.indexOf(car);\n\n    if (currenCarIndex === this.currentEditingCarIndex) {\n      this.isCarEditOpen = !this.isCarEditOpen;\n    } else if (currenCarIndex !== this.currentEditingCarIndex) {\n      this.isCarEditOpen = true;\n    }\n    this.currentEditingCarIndex = currenCarIndex;\n    this.currentEditing = car;\n\n    const customFields = {\n      customFieldName: null, customFieldValue: null\n    };\n\n    if (this.currentEditing.customField) {\n      customFields.customFieldName = this.currentEditing.customField.customFieldName;\n      customFields.customFieldValue = this.currentEditing.customField.customFieldValue;\n    } else {\n      this.currentEditing.customField = {\n        customFieldName: null, customFieldValue: null\n      };\n    }\n\n    this.carEditForm.setValue({\n      id: this.currentEditing.carData.id,\n      name: this.currentEditing.carData.name,\n      price: this.currentEditing.carData.price,\n      customFieldName: this.currentEditing.customField.customFieldName,\n      customFieldValue: this.currentEditing.customField.customFieldValue\n    });\n\n  }\n\n  submitEditedCar() {\n    const form = this.carEditForm.value;\n    console.log(form);\n    this.currentEditing.carData.id = form.id;\n    this.currentEditing.carData.name = form.name;\n    this.currentEditing.carData.price = form.price;\n\n    if (form.customFieldName) {\n      this.currentEditing.customField.customFieldName = form.customFieldName;\n      this.currentEditing.customField.customFieldValue = form.customFieldValue;\n      if (this.headers.length > this.requiredFieldsCount) {\n        this.headers.pop();\n      }\n      this.headers.push(form.customFieldName);\n    }\n\n    this.cars.cars[this.currentEditingCarIndex] = this.currentEditing;\n    this.isCarEditOpen = !this.isCarEditOpen;\n    this.carEditForm.reset();\n    this.currentEditing = null;\n  }\n\n  deleteColumn() {\n    this.cars.cars.forEach((car) => {\n      if (car.customField) {\n        car.customField.customFieldName = null;\n        car.customField.customFieldValue = null;\n      }\n    });\n    this.headers.pop();\n    this.isDeleteFormOpen = false;\n  }\n\n  sortDataByColumn() {\n    const form = this.sortForm.value;\n    const column = form.sortBy;\n    const type = form.sortType;\n    if (column === 'name') {\n      if (type === 'ascending') {\n        this.cars.cars.sort((a, b) => {\n          if (a.carData.name < b.carData.name) { return -1; }\n          if (a.carData.name > b.carData.name) { return 1; }\n          return 0;\n        });\n      } else {\n        this.cars.cars.sort((a, b) => {\n          if (a.carData.name < b.carData.name) { return 1; }\n          if (a.carData.name > b.carData.name) { return -1; }\n          return 0;\n        });\n      }\n    }\n    if (column === 'id') {\n      if (type === 'ascending') {\n        this.cars.cars.sort((a, b) => {\n          return a.carData.id - b.carData.id;\n        });\n      } else {\n        this.cars.cars.sort((a, b) => {\n          return b.carData.id - a.carData.id;\n        });\n      }\n    }\n    if (column === 'price') {\n      if (type === 'ascending') {\n        this.cars.cars.sort((a, b) => {\n          return a.carData.price - b.carData.price;\n        });\n      } else {\n        this.cars.cars.sort((a, b) => {\n          return b.carData.price - a.carData.price;\n        });\n      }\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableService {\n\n  constructor(private http: HttpClient) { }\n\n  getTableData() {\n    return this.http.get('assets/data.json');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TableComponent } from './components/table/table.component';\n\nconst routes: Routes = [\n  { path: '', component: TableComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TableRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TableRoutingModule } from './table-routing.module';\nimport { TableComponent } from './components/table/table.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TableService } from './services/table/table.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [TableComponent],\n  imports: [\n    CommonModule,\n    TableRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [TableService]\n})\nexport class TableModule { }\n"],"sourceRoot":""}